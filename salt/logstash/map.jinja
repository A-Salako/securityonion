{# Copyright Security Onion Solutions LLC and/or licensed to Security Onion Solutions LLC under one
   or more contributor license agreements. Licensed under the Elastic License 2.0 as shown at 
   https://securityonion.net/license; you may not use this file except in compliance with the
   Elastic License 2.0. #}

{% from 'vars/globals.map.jinja' import GLOBALS %}
{% import_yaml 'logstash/defaults.yaml' as LOGSTASH_DEFAULTS %}
{% set LOGSTASH_MERGED = salt['pillar.get']('logstash', LOGSTASH_DEFAULTS.logstash, merge=True) %}

{# used to store the redis nodes that logstash needs to know about to pull from the queue #}
{% set LOGSTASH_REDIS_NODES = [] %}
{# stores all logstash nodes #}
{% set LOGSTASH_NODES = [] %}
{% set logstash_node_data = salt['pillar.get']('logstash:nodes', {GLOBALS.role.split('-')[1]: {GLOBALS.hostname: {'ip': GLOBALS.node_ip}}}) %}
{% set redis_node_data = salt['pillar.get']('redis:nodes', {GLOBALS.role.split('-')[1]: {GLOBALS.hostname: {'ip': GLOBALS.node_ip}}}) %}

{% for node_type, node_details in redis_node_data.items() | sort %}
{%   if GLOBALS.role in ['so-searchnode', 'so-standalone', 'so-managersearch', 'so-fleet'] %}
{%     if node_type in ['manager', 'managersearch', 'standalone', 'receiver' ] %}
{%       for hostname in node_data[node_type].keys() %}
{%         do LOGSTASH_REDIS_NODES.append({hostname:node_details[hostname].ip}) %}
{%       endfor %}
{%     endif %}
{%   endif %}
{% endfor %}

{% for node_type, node_details in logstash_node_data.items() | sort %}
{%   for hostname in node_data[node_type].keys() %}
{%     do LOGSTASH_NODES.append({hostname:node_details[hostname].ip}) %}
{%   endfor %}
{% endfor %}

